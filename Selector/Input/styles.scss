@import '../../css/settings';
@import '../../css/mixins/index';

$stackable-border-width: $grid * .2;

@mixin partial-width-input ($width) {
  @include respond-to-wide {
    @include partial-width(calc(#{$width} - 12.5px));
  }

  &.center {
    @include respond-to-wide {
      @include partial-width(calc(#{$width} - 25px));
    }
  }
}

@mixin stackable-input () {
  &.eighty {
    @include partial-width-input(80%);
  }

  &.three-quarters {
    @include partial-width-input(75%);
  }

  &.two-thirds {
    @include partial-width-input(66.66666%);
  }

  &.sixty {
    @include partial-width-input(60%);
  }

  &.half {
    @include partial-width-input(50%);
  }

  &.forty {
    @include partial-width-input(40%);
  }

  &.third {
    @include partial-width-input(33.33333%);
  }

  &.quarter {
    @include partial-width-input(25%);
  }

  &.twenty {
    @include partial-width-input(20%);
  }

  &.left {
    @include respond-to-wide {
      margin-right: 12.5px;
    }
  }

  &.center {
    @include respond-to-wide {
      margin: 0 12.5px;
    }

    &::after {
      clear: both;
      content: '';
      display: block;
    }
  }

  &.right {
    @include respond-to-wide {
      margin-left: 12.5px;
    }

    &::after {
      clear: both;
      content: '';
      display: block;
    }
  }
}

%selector-input {
  @include stackable-input();

  border-bottom: ($grid * .2) solid $border-color;
  box-sizing: border-box;
  clear: both;
  cursor: pointer;
  display: block;
  height: ($grid * 10);
  line-height: ($grid * 10);
  position: relative;
  text-align: left;
  transition: border-color .2s ease;

  &.big {
    height: ($grid * 12);
    line-height: ($grid * 12);
  }

  &.giant {
    height: ($grid * 16);
    line-height: ($grid * 16);
  }

  &.is-hidden {
    display: none;
  }

  &:focus {
    border-bottom-width: ($grid * .4);
    outline: none;
  }

  &:hover {
    border-color: map-get($colors, blue-hover);
    z-index: 10;
  }

  &.is-focused {
    border-bottom-width: ($grid * .4);
    border-color: map-get($colors, blue-focus);
    z-index: 20;
  }

  &.is-error {
    border-color: map-get($colors, error-border);
    box-shadow: none;
    z-index: 5;

    &:hover {
      border-color: map-get($colors, error-hover);
      z-index: 10;
    }

    &.is-focused {
      border-color: map-get($colors, error);
      z-index: 20;
    }
  }

  &.is-warning {
    border-color: map-get($colors, warning-border);
    box-shadow: none;
    z-index: 5;

    &:hover {
      border-color: map-get($colors, warning-hover);
      z-index: 10;
    }

    &.is-focused {
      border-color: map-get($colors, warning-hover);
      z-index: 20;
    }
  }

  &.is-disabled {
    border-color: map-get($colors, grey-lines);
    cursor: default;

    &:hover {
      border-color: map-get($colors, grey-lines);
    }
  }

  &.is-centered {
    .selector-input__label {
      padding: 0;
      width: 100%;
    }

    .selector-input--icon__input {
      padding: 0 40px;
    }

    .selector-input__input,
    .selector-input__label {
      text-align: center;
    }
  }

  &.is-loading {
    &:after {
      @include button__loader;
      content: '';
      margin-top: -10px;
      position: absolute;
      right: 15px;
      top: 50%;
    }
  }
}

%selector-input__label {
  @include typography(map-get($font-sizes, big-body-mobile), regular);

  color: map-get($colors, 'grey-text');
  line-height: ($grid * 10);
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-overflow: ellipsis;
  transition: transform .2s ease, font-size .2s ease, color .2s ease;
  white-space: nowrap;
  width: 100%;

  @include respond-to-wide {
    @include typography(map-get($font-sizes, big-body-desktop), regular);
  }

  .big & {
    height: ($grid * 12);
    line-height: ($grid * 13);
  }

  .giant & {
    @include typography(map-get($font-sizes, giant-input), light);
    line-height: ($grid * 16);
    transform: translate(0, ($grid * 2));
  }

  .big.is-filled &,
  .big.is-error &,
  .big.is-warning & {
    transform: translate(0, ($grid * -2.2));
  }

  .giant.is-filled &,
  .giant.is-error &,
  .giant.is-warning & {
    transform: translate(0, ($grid * -3.8));
  }

  .is-filled &,
  .is-error &,
  .is-warning & {
    @include typography(map-get($font-sizes, input-label), regular);

    transform: translate(0, ($grid * -2));
  }

  .is-filled & {
    color: map-get($colors, 'grey-text');
  }

  .is-error & {
    color: map-get($colors, error);
  }

  .is-warning & {
    color: map-get($colors, warning);
  }

  .is-disabled & {
    color: map-get($colors, grey-lines);
  }

  .ie9 & {
    z-index: 1;
  }
}

%selector-input__input {
  @include typography(map-get($font-sizes, big-body-mobile), semi-bold);

  -webkit-tap-highlight-color: rgba(0,0,0,0);
  appearance: none;
  background-color: transparent;
  border: 0;
  box-sizing: border-box;
  color: map-get($colors, black);
  height: ($grid * 10);
  line-height: ($grid * 10);
  outline: none;
  overflow: hidden;
  padding-right: ($grid * 4);
  position: absolute;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: 100%;

  @include respond-to-wide {
    @include typography(map-get($font-sizes, big-body-desktop), semi-bold);
  }

  & .selector-input__input-placeholder {
    // This should be the same color and font weight as .selector-input__label.
    color: map-get($colors, grey-text);
    font-weight: normal;
  }

  .big & {
    height: ($grid * 13);
    line-height: ($grid * 13);
  }

  .giant & {
    @include typography(map-get($font-sizes, giant-input), light);
    height: ($grid * 16);
    line-height: ($grid * 16);
    top: ($grid * 2);
  }

  .is-filled &,
  .is-error &,
  .is-warning & {
    height: ($grid * 9);
    line-height: ($grid * 9);
    top: ($grid * 1.6);
  }

  .big.is-filled &,
  .big.is-error &,
  .big.is-warning & {
    height: ($grid * 9.8);
    line-height: ($grid * 9.8);
    top: ($grid * 2.2);
  }

  .giant.is-filled &,
  .giant.is-error &,
  .giant.is-warning & {
    height: ($grid * 16);
    line-height: ($grid * 16);
    top: ($grid * 2);
  }

  .is-disabled & {
    color: map-get($colors, grey-lines);
    /* Override webkit font color change */
    -webkit-text-fill-color: map-get($colors, grey-lines);
    -webkit-opacity: 1;
  }

  .safari &,
  .ios & {
    -webkit-transform: translate3d(0, 0, 0);
  }
}

.selector-input {
  @extend %selector-input;
}

.selector-input__label {
  @extend %selector-input__label;
}

.selector-input__input {
  @extend %selector-input__input;
}

.selector-input--icon {
  @extend %selector-input;
}

.selector-input--icon__label {
  @extend %selector-input__label;
}

.selector-input--icon__input {
  @extend %selector-input__input;
}

.selector-input--icon__label,
.selector-input--icon__input {
  padding-left: ($grid * 6);

  .giant & {
    padding-left: ($grid * 7);
  }
}

.selector-input--icon__icon {
  display: block;
  fill-rule: evenodd;
  height: ($grid * 4);
  margin: ($grid * 3) 0 0 0;
  position: absolute;
  width: ($grid * 4);

  .big & {
    margin-top: ($grid * 4);
  }

  .giant & {
    height: ($grid * 5);
    margin: ($grid * 7.6) 0 0;
    width: ($grid * 5);
  }

  &__fill {
    @include illustration__fill(map-get($colors, grey-icon));
  }

  .selector-input--icon:hover &__fill {
    @include illustration__fill(map-get($colors, blue-hover));
  }

  .selector-input--icon.is-focused &__fill {
    @include illustration__fill(map-get($colors, blue-hover));
  }

  .selector-input--icon.is-error &__fill {
    @include illustration__fill(map-get($colors, red));
  }

  .selector-input--icon.is-warning &__fill {
    @include illustration__fill(map-get($colors, warning-border));
  }

  .selector-input--icon.is-disabled &__fill {
    @include illustration__fill(map-get($colors, grey-lines));
  }

  &__stroke {
    @include illustration__stroke(map-get($colors, grey-icon));
  }

  .selector-input--icon:hover &__stroke {
    @include illustration__stroke(map-get($colors, blue-hover));
  }

  .selector-input--icon.is-focused &__stroke {
    @include illustration__stroke(map-get($colors, blue-hover));
  }

  .selector-input--icon.is-error &__stroke {
    @include illustration__stroke(map-get($colors, red));
  }

  .selector-input--icon.is-warning &__stroke {
    @include illustration__stroke(map-get($colors, warning-border));
  }

  .selector-input--icon.is-disabled &__stroke {
    @include illustration__stroke(map-get($colors, grey-lines));
  }
}

.selector-input--icon__placeholder {
  background: map-get($colors, grey-lines);
  display: block;
  height: ($grid * 4);
  width: ($grid * 4);

  .is-focused & {
    background: map-get($colors, klarna-blue);
  }

  .is-error & {
    background: map-get($colors, error-border);
  }

  .is-warning & {
    background: map-get($colors, warning-border);
  }
}

.selector-input__link-wrapper {
  line-height: ($grid * 4);
  margin-top: ($grid * -2);
  position: absolute;
  right: 0;
  top: 50%;
}

